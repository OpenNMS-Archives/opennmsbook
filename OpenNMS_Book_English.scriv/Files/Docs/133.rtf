{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\deftab720
\pard\pardeftab720\sl340\sa300\ql\qnatural

\f0\fs28 \cf0 At the heart of OpenNMS is eventd. All process either generate events, rely on events or both, so it needs to be shown in the architecture overview.\
Second, to demonstrate events in class I always start off with a send-event.pl example. Just sending "uei.foo" to the system and seeing it show up goes a long way toward having the admin understand how events work.\
From there I would probably have sections on traps, syslog and TL/1, since those would build on the student's understanding of events.\
Third, a natural progression from events is notifications. Since currently notifications are triggered on events, it demonstrates a use of a process that consumes events from OpenNMS.\
At this point, I would probably move on to service monitoring, followed by data collection, and then return back to events by discussing alarms, automations and the trouble ticket interface.\
}